/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package calculadora;

/**
 *
 * @author Administrador
 */
public class operaciones_basicas {
    
    public operaciones_basicas(){}
    
    /**
     * 
     * cero parametros del construtor
     */
    public int suma (int number1, int number2)
    {
        return number1 + number2;
    }
    
    public int resta (int number1, int number2)
    {
        return number1 - number2;
    }
    
    public int multiplicacion (int number1, int number2)
    {
        int result= 0;
        for(int i=0; i<number2;i++)
        {
            result= suma(result, number1);
        }
        return result;
    }
    
    public double division (int number1, int number2)
    {
        if(number2!=0)
        {
            return number1 / number2;
        }
        else
        {
            return Double.NaN; //no hay numero
        }
    }
    
    public int modulo(int number1,int number2)
    {
        return number1 % number2;
    }
    
    
    public int potencia(int base, int exponente)
    {
        if(exponente ==1)
        {
            return base;
        }
        else
        {
            if(exponente > 1)
            {
                return base * potencia(base, exponente - 1);
            }
            else
            {
                if(exponente == 0)
                {
                    return 1;
                }
                else
                {
                    return 1/ potencia(base, exponente * (-1) );
                }
            }
        }
    }
    
    public int factorial (int x)
    {
        if(x<1)
        {
            return 1;
        }
        else
        {
            return x * factorial(x-1);
        }
    }
    
    
    public double[] ecuacion_cuadratica(int a, int b, int c)
    {
         
      d = ((b*b)-(4*a*c));
      e= ((2)*(a));
       
    }
    if(e <= 0)
    {
       return Double.NaN; // no se puede dividir entre cero
    }
    if(d < 0)
    {
        return Double.NaN ; // no existe raiz de un numero negativo
}
    else{
    int h=Math.sqrt(d); 
    int f =(((-b)+(h))/e);  //x1 +
    int g=(((-b)-(h))/e);   //x2 -
    return f ;
    return g ;
}
    

    }
}
